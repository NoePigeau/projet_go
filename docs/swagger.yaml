basePath: /api
definitions:
  handler.Response:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  payment.InputPayment:
    properties:
      price_paid:
        type: number
      product_id:
        type: integer
    required:
    - price_paid
    - product_id
    type: object
  payment.Payment:
    properties:
      created_at:
        type: string
      id:
        type: integer
      payment_id:
        type: integer
      price_paid:
        type: number
      product:
        $ref: '#/definitions/product.Product'
      updated_at:
        type: string
    type: object
  product.InputProduct:
    properties:
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
  product.Product:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  user.InputUser:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  user.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: this is the go project.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GO Project
  version: "1.0"
paths:
  /protected/payment:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/payment.Payment'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Get all payment
      tags:
      - payment
    post:
      consumes:
      - application/json
      parameters:
      - description: Message body
        in: body
        name: paymentInput
        required: true
        schema:
          $ref: '#/definitions/payment.InputPayment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/payment.Payment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Create a payment
      tags:
      - payment
  /protected/payment/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Delete payment by ID
      tags:
      - payment
    get:
      consumes:
      - application/json
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Get payment by ID
      tags:
      - payment
    put:
      consumes:
      - application/json
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Payment body
        in: body
        name: paymentInput
        required: true
        schema:
          $ref: '#/definitions/payment.InputPayment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Update payment by ID
      tags:
      - payment
  /protected/product:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Get all product
      tags:
      - product
    post:
      consumes:
      - application/json
      parameters:
      - description: Product body
        in: body
        name: productInput
        required: true
        schema:
          $ref: '#/definitions/product.InputProduct'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/product.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Create a product
      tags:
      - product
  /protected/product/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Delete product by ID
      tags:
      - product
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Get product by ID
      tags:
      - product
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product body
        in: body
        name: productInput
        required: true
        schema:
          $ref: '#/definitions/product.InputProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Update product by ID
      tags:
      - product
  /protected/user/current:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - user
  /public/user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Message body
        in: body
        name: userInput
        required: true
        schema:
          $ref: '#/definitions/user.InputUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Login a user
      tags:
      - user
  /public/user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Message body
        in: body
        name: userInput
        required: true
        schema:
          $ref: '#/definitions/user.InputUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.Response'
      summary: Register a user
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
